
/*
*  MySQL Exercise 3:
*
*   Now that you have your air travel database all set up and populated, please demonstrate how to:
*
*       1.) Query all flights on a specific day
*       2.) Query all flights between two specific cities on a specific day
*       3.) Query all passengers on a specific flight between two specific cities today
*       4.) Query the flight information for a specific passenger on a specific flight
*       5.) Query the passenger information for a specific user on a specific flight yesterday
*       6.) Query the number of flights between two specific cities this week, month, and year
*       7.) Query the number of passengers that traveled between two specific cities today, this week, month and year
*       8.) Insert records for new flights between airports
*       9.) Insert records for new tickets and passengers on specific flights
*       10.) Update meal preference (or something similar) for a specific passenger on a specific flight
*       Bonus: Have some fun - get creative - what else can you do? Flex those SQL muscles and show us what
*           you've got! :)
*
*/


1.) 
SELECT * FROM flights WHERE DATE(depart_time) = '2022-10-28';

2.)
SELECT * FROM flights WHERE DATE(depart_time) = CURRENT_DATE AND route_id = 7;

3.)
SELECT passengers.first_name, passengers.last_name FROM passengers 
JOIN booking
ON passengers.passender_id = booking.passenger_id
JOIN flights
ON booking.flight_id = flights.flight_id
WHERE DATE(flights.depart_time) = CURRENT_DATE() AND flights.route_id = 36;

4.)
SELECT passengers.first_name, passengers.last_name, meals.meal_name, flights.flight_status, tickets.seat_number, departing_destinations.city AS departing_city, departing_destinations.country AS departing_country, arriving_destinations.city AS arriving_city, arriving_destinations.country AS arriving_country
FROM passengers
JOIN booking
  ON passengers.passender_id = booking.passenger_id
JOIN flights
  ON booking.flight_id = flights.flight_id
JOIN meals
  ON booking.meal_preference = meals.meal_id
JOIN tickets
  ON booking.ticket_id = tickets.ticket_id
JOIN route
  ON flights.route_id = route.route_id
JOIN destinations AS departing_destinations
  ON route.departing_dest = departing_destinations.destination_id
JOIN destinations AS arriving_destinations
  ON route.arriving_dest = arriving_destinations.destination_id
WHERE flights.flight_id = 9 AND passengers.passender_id = 4;

5.)
SELECT passengers.first_name, passengers.last_name, passengers.date_of_birth, passengers.phone, meals.meal_name, passengers.email, tickets.seat_number
FROM passengers
JOIN booking
ON passengers.passender_id = booking.passenger_id
JOIN flights
ON booking.flight_id = flights.flight_id
JOIN meals
ON booking.meal_preference = meals.meal_id
JOIN tickets
ON booking.ticket_id = tickets.ticket_id
JOIN route
ON flights.route_id = route.route_id
JOIN destinations
ON route.departing_dest = destinations.destination_id
WHERE passengers.passender_id = 2 AND DATE(flights.depart_time) = DATE(DATE_SUB(NOW(), INTERVAL 1 DAY));

6.)
SELECT COUNT(flights.flight_id) AS num_of_flights
FROM flights
WHERE flights.route_id = 36 AND flights.depart_time >= CURDATE() - INTERVAL WEEKDAY(CURDATE()) DAY
AND flights.depart_time < CURDATE() - INTERVAL WEEKDAY(CURDATE()) - 6 DAY;

SELECT COUNT(flights.flight_id) AS num_of_flights
FROM flights
WHERE flights.route_id = 7 AND DATE_FORMAT(flights.depart_time, '%Y-%m') = DATE_FORMAT(CURDATE(), '%Y-%m');

SELECT COUNT(flights.flight_id) AS num_of_flights
FROM flights
WHERE flights.route_id = 7 AND YEAR(flights.depart_time) = YEAR(CURDATE());

7.)
SELECT COUNT(passengers.passender_id) AS num_of_passengers
FROM passengers
JOIN booking
ON passengers.passender_id = booking.passenger_id
JOIN flights
ON booking.flight_id = flights.flight_id
WHERE flights.route_id = 36 AND flights.depart_time >= CURDATE() - INTERVAL WEEKDAY(CURDATE()) DAY
AND flights.depart_time < CURDATE() - INTERVAL WEEKDAY(CURDATE()) - 6 DAY;

SELECT COUNT(passengers.passender_id) AS num_of_passengers
FROM passengers
JOIN booking
ON passengers.passender_id = booking.passenger_id
JOIN flights
ON booking.flight_id = flights.flight_id
WHERE flights.route_id = 36 AND DATE_FORMAT(flights.depart_time, '%Y-%m') = DATE_FORMAT(CURDATE(), '%Y-%m');

SELECT COUNT(passengers.passender_id) AS num_of_passengers
FROM passengers
JOIN booking
ON passengers.passender_id = booking.passenger_id
JOIN flights
ON booking.flight_id = flights.flight_id
WHERE flights.route_id = 11 AND YEAR(flights.depart_time) = YEAR(CURDATE());

8.)
INSERT INTO flights
(airline_id, depart_time, arrival_time, route_id, flight_status, plane_id)
VALUES
(3, '2023-06-13 10:25:43', '2023-06-13 16:25:43', 17, "On Time", 3),
(4, '2023-06-13 11:25:43', '2023-06-14 17:25:43', 17, "On Time", 7),
(1, '2023-06-13 12:25:43', '2023-06-15 18:25:43', 17, "On Time", 12);

9.)
INSERT INTO passengers (first_name, last_name, email, date_of_birth, phone)
VALUES
("Jane", "Guimte", "jgimty@gmail.com", "1989-02-02", 9215557482),
("Vince", "Collada", "vcollada@gmail.com", "2005-01-01", 5550981123);

INSERT INTO tickets (time_purchased, class_id, price, seat_number)
VALUES
('2023-04-02 14:15:22', 3, 334.57, 24),
('2023-04-02 12:11:11', 3, 334.57, 25);

#use the newly created passenger and ticket id to create new bookings
INSERT INTO booking (ticket_id, flight_id, passenger_id, booking_agency_id, meal_preference)
VALUES
(20, 4, 16, 2, 5),
(21, 4, 17, 2, 7);

10.)
UPDATE booking
SET meal_preference = 3
WHERE passenger_id = 17 AND flight_id = 4;

11. Bonus)
SELECT airlines.name, GROUP_CONCAT(flights.flight_id) AS airline_history
FROM airlines
JOIN flights ON airlines.airline_id = flights.airline_id
GROUP BY airlines.airline_id;

#Return a flight history of each airline

